generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model District {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  code        String    @unique
  name        String
  regencyCode String    @map("regency_code")
  regency     Regency   @relation(fields: [regencyCode], references: [code])
  villages    Village[]

  @@map("districts")
}

model Island {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  code             String   @unique
  coordinate       String
  isOutermostSmall Boolean  @map("is_outermost_small")
  isPopulated      Boolean  @map("is_populated")
  name             String
  regencyCode      String?  @map("regency_code")
  regency          Regency? @relation(fields: [regencyCode], references: [code])

  @@map("islands")
}

model Province {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  code      String    @unique
  name      String
  regencies Regency[]

  @@map("provinces")
}

model Regency {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  code         String     @unique
  name         String
  provinceCode String     @map("province_code")
  islands      Island[]
  districts    District[]
  province     Province   @relation(fields: [provinceCode], references: [code])

  @@map("regencies")
}

model SeederLogs {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  dataVersion String   @map("data_version")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("seeder_logs")
}

model Village {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  code         String   @unique
  districtCode String   @map("district_code")
  name         String
  district     District @relation(fields: [districtCode], references: [code])

  @@map("villages")
}
